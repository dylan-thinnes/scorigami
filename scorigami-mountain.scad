color("lime") {
translate([0, 0, 0]) cube([1, 1, 36.5]);
translate([0, 10, 0]) cube([1, 1, 30.5]);
translate([10, 10, 0]) cube([1, 1, 12]);
translate([2, 10, 0]) cube([1, 1, 0.5]);
translate([3, 10, 0]) cube([1, 1, 23]);
translate([4, 10, 0]) cube([1, 1, 0.5]);
translate([5, 10, 0]) cube([1, 1, 0.5]);
translate([6, 10, 0]) cube([1, 1, 30.5]);
translate([7, 10, 0]) cube([1, 1, 43]);
translate([8, 10, 0]) cube([1, 1, 0.5]);
translate([9, 10, 0]) cube([1, 1, 18.5]);
translate([0, 11, 0]) cube([1, 1, 0.5]);
translate([10, 11, 0]) cube([1, 1, 1]);
translate([3, 11, 0]) cube([1, 1, 1]);
translate([6, 11, 0]) cube([1, 1, 1]);
translate([7, 11, 0]) cube([1, 1, 1.5]);
translate([8, 11, 0]) cube([1, 1, 0.5]);
translate([0, 12, 0]) cube([1, 1, 11]);
translate([10, 12, 0]) cube([1, 1, 10.5]);
translate([12, 12, 0]) cube([1, 1, 1]);
translate([3, 12, 0]) cube([1, 1, 2.5]);
translate([6, 12, 0]) cube([1, 1, 8]);
translate([7, 12, 0]) cube([1, 1, 12]);
translate([8, 12, 0]) cube([1, 1, 1]);
translate([9, 12, 0]) cube([1, 1, 9.5]);
translate([0, 13, 0]) cube([1, 1, 32.5]);
translate([10, 13, 0]) cube([1, 1, 84.5]);
translate([11, 13, 0]) cube([1, 1, 1]);
translate([12, 13, 0]) cube([1, 1, 11]);
translate([13, 13, 0]) cube([1, 1, 9]);
translate([2, 13, 0]) cube([1, 1, 1.5]);
translate([3, 13, 0]) cube([1, 1, 25]);
translate([6, 13, 0]) cube([1, 1, 27.5]);
translate([7, 13, 0]) cube([1, 1, 39]);
translate([8, 13, 0]) cube([1, 1, 1]);
translate([9, 13, 0]) cube([1, 1, 17.5]);
translate([0, 14, 0]) cube([1, 1, 38.5]);
translate([10, 14, 0]) cube([1, 1, 44]);
translate([11, 14, 0]) cube([1, 1, 2]);
translate([12, 14, 0]) cube([1, 1, 9.5]);
translate([13, 14, 0]) cube([1, 1, 29]);
translate([14, 14, 0]) cube([1, 1, 7.5]);
translate([2, 14, 0]) cube([1, 1, 2.5]);
translate([3, 14, 0]) cube([1, 1, 20]);
translate([5, 14, 0]) cube([1, 1, 1]);
translate([6, 14, 0]) cube([1, 1, 24.5]);
translate([7, 14, 0]) cube([1, 1, 45]);
translate([9, 14, 0]) cube([1, 1, 13.5]);
translate([0, 15, 0]) cube([1, 1, 7.5]);
translate([10, 15, 0]) cube([1, 1, 12.5]);
translate([12, 15, 0]) cube([1, 1, 4.5]);
translate([13, 15, 0]) cube([1, 1, 9]);
translate([14, 15, 0]) cube([1, 1, 4.5]);
translate([3, 15, 0]) cube([1, 1, 2]);
translate([6, 15, 0]) cube([1, 1, 2]);
translate([7, 15, 0]) cube([1, 1, 5]);
translate([9, 15, 0]) cube([1, 1, 2.5]);
translate([0, 16, 0]) cube([1, 1, 24]);
translate([10, 16, 0]) cube([1, 1, 42.5]);
translate([11, 16, 0]) cube([1, 1, 1]);
translate([12, 16, 0]) cube([1, 1, 7]);
translate([13, 16, 0]) cube([1, 1, 72.5]);
translate([14, 16, 0]) cube([1, 1, 32.5]);
translate([15, 16, 0]) cube([1, 1, 7]);
translate([16, 16, 0]) cube([1, 1, 2]);
translate([3, 16, 0]) cube([1, 1, 13.5]);
translate([6, 16, 0]) cube([1, 1, 17]);
translate([7, 16, 0]) cube([1, 1, 21]);
translate([8, 16, 0]) cube([1, 1, 1]);
translate([9, 16, 0]) cube([1, 1, 7]);
translate([0, 17, 0]) cube([1, 1, 29]);
translate([10, 17, 0]) cube([1, 1, 74.5]);
translate([11, 17, 0]) cube([1, 1, 1]);
translate([12, 17, 0]) cube([1, 1, 13]);
translate([13, 17, 0]) cube([1, 1, 54.5]);
translate([14, 17, 0]) cube([1, 1, 100]);
translate([15, 17, 0]) cube([1, 1, 7.5]);
translate([16, 17, 0]) cube([1, 1, 42]);
translate([17, 17, 0]) cube([1, 1, 10.5]);
translate([3, 17, 0]) cube([1, 1, 32]);
translate([5, 17, 0]) cube([1, 1, 1]);
translate([6, 17, 0]) cube([1, 1, 32]);
translate([7, 17, 0]) cube([1, 1, 54.5]);
translate([8, 17, 0]) cube([1, 1, 0.5]);
translate([9, 17, 0]) cube([1, 1, 19]);
translate([0, 18, 0]) cube([1, 1, 1.5]);
translate([10, 18, 0]) cube([1, 1, 3.5]);
translate([12, 18, 0]) cube([1, 1, 2.5]);
translate([13, 18, 0]) cube([1, 1, 2.5]);
translate([14, 18, 0]) cube([1, 1, 2.5]);
translate([15, 18, 0]) cube([1, 1, 4.5]);
translate([16, 18, 0]) cube([1, 1, 4.5]);
translate([17, 18, 0]) cube([1, 1, 7.5]);
translate([3, 18, 0]) cube([1, 1, 1]);
translate([6, 18, 0]) cube([1, 1, 2]);
translate([7, 18, 0]) cube([1, 1, 4]);
translate([0, 19, 0]) cube([1, 1, 17.5]);
translate([10, 19, 0]) cube([1, 1, 13.5]);
translate([11, 19, 0]) cube([1, 1, 2.5]);
translate([12, 19, 0]) cube([1, 1, 5]);
translate([13, 19, 0]) cube([1, 1, 25.5]);
translate([14, 19, 0]) cube([1, 1, 24]);
translate([15, 19, 0]) cube([1, 1, 2]);
translate([16, 19, 0]) cube([1, 1, 27.5]);
translate([17, 19, 0]) cube([1, 1, 30]);
translate([18, 19, 0]) cube([1, 1, 1]);
translate([19, 19, 0]) cube([1, 1, 0.5]);
translate([3, 19, 0]) cube([1, 1, 9.5]);
translate([5, 19, 0]) cube([1, 1, 0.5]);
translate([6, 19, 0]) cube([1, 1, 6.5]);
translate([7, 19, 0]) cube([1, 1, 19.5]);
translate([8, 19, 0]) cube([1, 1, 1]);
translate([9, 19, 0]) cube([1, 1, 8]);
translate([0, 2, 0]) cube([1, 1, 2.5]);
translate([0, 20, 0]) cube([1, 1, 35.5]);
translate([10, 20, 0]) cube([1, 1, 62]);
translate([12, 20, 0]) cube([1, 1, 14.5]);
translate([13, 20, 0]) cube([1, 1, 59]);
translate([14, 20, 0]) cube([1, 1, 49]);
translate([15, 20, 0]) cube([1, 1, 8.5]);
translate([16, 20, 0]) cube([1, 1, 33.5]);
translate([17, 20, 0]) cube([1, 1, 148.5]);
translate([18, 20, 0]) cube([1, 1, 4]);
translate([19, 20, 0]) cube([1, 1, 23.5]);
translate([2, 20, 0]) cube([1, 1, 0.5]);
translate([20, 20, 0]) cube([1, 1, 11]);
translate([3, 20, 0]) cube([1, 1, 32.5]);
translate([6, 20, 0]) cube([1, 1, 28]);
translate([7, 20, 0]) cube([1, 1, 46]);
translate([8, 20, 0]) cube([1, 1, 1.5]);
translate([9, 20, 0]) cube([1, 1, 11]);
translate([0, 21, 0]) cube([1, 1, 34]);
translate([10, 21, 0]) cube([1, 1, 32]);
translate([11, 21, 0]) cube([1, 1, 2]);
translate([12, 21, 0]) cube([1, 1, 4]);
translate([13, 21, 0]) cube([1, 1, 26]);
translate([14, 21, 0]) cube([1, 1, 50]);
translate([15, 21, 0]) cube([1, 1, 2]);
translate([16, 21, 0]) cube([1, 1, 24.5]);
translate([17, 21, 0]) cube([1, 1, 53]);
translate([18, 21, 0]) cube([1, 1, 8.5]);
translate([19, 21, 0]) cube([1, 1, 14.5]);
translate([2, 21, 0]) cube([1, 1, 0.5]);
translate([20, 21, 0]) cube([1, 1, 36.5]);
translate([21, 21, 0]) cube([1, 1, 7.5]);
translate([3, 21, 0]) cube([1, 1, 11.5]);
translate([6, 21, 0]) cube([1, 1, 10]);
translate([7, 21, 0]) cube([1, 1, 42.5]);
translate([8, 21, 0]) cube([1, 1, 0.5]);
translate([9, 21, 0]) cube([1, 1, 8]);
translate([0, 22, 0]) cube([1, 1, 7]);
translate([10, 22, 0]) cube([1, 1, 10.5]);
translate([12, 22, 0]) cube([1, 1, 1]);
translate([13, 22, 0]) cube([1, 1, 8]);
translate([14, 22, 0]) cube([1, 1, 8.5]);
translate([15, 22, 0]) cube([1, 1, 0.5]);
translate([16, 22, 0]) cube([1, 1, 10.5]);
translate([17, 22, 0]) cube([1, 1, 13]);
translate([18, 22, 0]) cube([1, 1, 0.5]);
translate([19, 22, 0]) cube([1, 1, 9.5]);
translate([20, 22, 0]) cube([1, 1, 9]);
translate([21, 22, 0]) cube([1, 1, 11]);
translate([3, 22, 0]) cube([1, 1, 4]);
translate([5, 22, 0]) cube([1, 1, 1]);
translate([6, 22, 0]) cube([1, 1, 3]);
translate([7, 22, 0]) cube([1, 1, 6.5]);
translate([8, 22, 0]) cube([1, 1, 0.5]);
translate([9, 22, 0]) cube([1, 1, 3]);
translate([0, 23, 0]) cube([1, 1, 21.5]);
translate([10, 23, 0]) cube([1, 1, 33]);
translate([11, 23, 0]) cube([1, 1, 0.5]);
translate([12, 23, 0]) cube([1, 1, 4.5]);
translate([13, 23, 0]) cube([1, 1, 26]);
translate([14, 23, 0]) cube([1, 1, 26]);
translate([15, 23, 0]) cube([1, 1, 5.5]);
translate([16, 23, 0]) cube([1, 1, 26]);
translate([17, 23, 0]) cube([1, 1, 64]);
translate([18, 23, 0]) cube([1, 1, 3]);
translate([19, 23, 0]) cube([1, 1, 10]);
translate([2, 23, 0]) cube([1, 1, 1]);
translate([20, 23, 0]) cube([1, 1, 105]);
translate([21, 23, 0]) cube([1, 1, 28.5]);
translate([22, 23, 0]) cube([1, 1, 8]);
translate([23, 23, 0]) cube([1, 1, 2.5]);
translate([3, 23, 0]) cube([1, 1, 18.5]);
translate([6, 23, 0]) cube([1, 1, 10.5]);
translate([7, 23, 0]) cube([1, 1, 36]);
translate([8, 23, 0]) cube([1, 1, 1.5]);
translate([9, 23, 0]) cube([1, 1, 5.5]);
translate([0, 24, 0]) cube([1, 1, 31.5]);
translate([10, 24, 0]) cube([1, 1, 68.5]);
translate([11, 24, 0]) cube([1, 1, 0.5]);
translate([12, 24, 0]) cube([1, 1, 6.5]);
translate([13, 24, 0]) cube([1, 1, 35]);
translate([14, 24, 0]) cube([1, 1, 70]);
translate([15, 24, 0]) cube([1, 1, 4.5]);
translate([16, 24, 0]) cube([1, 1, 27]);
translate([17, 24, 0]) cube([1, 1, 89.5]);
translate([18, 24, 0]) cube([1, 1, 4]);
translate([19, 24, 0]) cube([1, 1, 17.5]);
translate([2, 24, 0]) cube([1, 1, 1.5]);
translate([20, 24, 0]) cube([1, 1, 59.5]);
translate([21, 24, 0]) cube([1, 1, 79.5]);
translate([22, 24, 0]) cube([1, 1, 18.5]);
translate([23, 24, 0]) cube([1, 1, 38.5]);
translate([24, 24, 0]) cube([1, 1, 8.5]);
translate([3, 24, 0]) cube([1, 1, 32]);
translate([5, 24, 0]) cube([1, 1, 0.5]);
translate([6, 24, 0]) cube([1, 1, 19.5]);
translate([7, 24, 0]) cube([1, 1, 41.5]);
translate([8, 24, 0]) cube([1, 1, 1]);
translate([9, 24, 0]) cube([1, 1, 12.5]);
translate([0, 25, 0]) cube([1, 1, 5.5]);
translate([10, 25, 0]) cube([1, 1, 5.5]);
translate([11, 25, 0]) cube([1, 1, 0.5]);
translate([12, 25, 0]) cube([1, 1, 1.5]);
translate([13, 25, 0]) cube([1, 1, 3]);
translate([14, 25, 0]) cube([1, 1, 2.5]);
translate([15, 25, 0]) cube([1, 1, 2]);
translate([16, 25, 0]) cube([1, 1, 3]);
translate([17, 25, 0]) cube([1, 1, 7]);
translate([19, 25, 0]) cube([1, 1, 3.5]);
translate([20, 25, 0]) cube([1, 1, 10]);
translate([21, 25, 0]) cube([1, 1, 4]);
translate([22, 25, 0]) cube([1, 1, 7]);
translate([23, 25, 0]) cube([1, 1, 5]);
translate([24, 25, 0]) cube([1, 1, 9]);
translate([3, 25, 0]) cube([1, 1, 2]);
translate([6, 25, 0]) cube([1, 1, 2.5]);
translate([7, 25, 0]) cube([1, 1, 4]);
translate([9, 25, 0]) cube([1, 1, 0.5]);
translate([0, 26, 0]) cube([1, 1, 15]);
translate([10, 26, 0]) cube([1, 1, 22]);
translate([11, 26, 0]) cube([1, 1, 2]);
translate([12, 26, 0]) cube([1, 1, 0.5]);
translate([13, 26, 0]) cube([1, 1, 11]);
translate([14, 26, 0]) cube([1, 1, 20.5]);
translate([15, 26, 0]) cube([1, 1, 4]);
translate([16, 26, 0]) cube([1, 1, 12.5]);
translate([17, 26, 0]) cube([1, 1, 17]);
translate([18, 26, 0]) cube([1, 1, 5.5]);
translate([19, 26, 0]) cube([1, 1, 2.5]);
translate([20, 26, 0]) cube([1, 1, 29]);
translate([21, 26, 0]) cube([1, 1, 19.5]);
translate([22, 26, 0]) cube([1, 1, 3.5]);
translate([23, 26, 0]) cube([1, 1, 26.5]);
translate([24, 26, 0]) cube([1, 1, 22]);
translate([25, 26, 0]) cube([1, 1, 1.5]);
translate([26, 26, 0]) cube([1, 1, 0.5]);
translate([3, 26, 0]) cube([1, 1, 10.5]);
translate([6, 26, 0]) cube([1, 1, 8]);
translate([7, 26, 0]) cube([1, 1, 18]);
translate([8, 26, 0]) cube([1, 1, 1.5]);
translate([9, 26, 0]) cube([1, 1, 5.5]);
translate([0, 27, 0]) cube([1, 1, 33]);
translate([10, 27, 0]) cube([1, 1, 52]);
translate([11, 27, 0]) cube([1, 1, 3.5]);
translate([12, 27, 0]) cube([1, 1, 4]);
translate([13, 27, 0]) cube([1, 1, 38]);
translate([14, 27, 0]) cube([1, 1, 43]);
translate([15, 27, 0]) cube([1, 1, 3]);
translate([16, 27, 0]) cube([1, 1, 17]);
translate([17, 27, 0]) cube([1, 1, 62]);
translate([18, 27, 0]) cube([1, 1, 0.5]);
translate([19, 27, 0]) cube([1, 1, 11.5]);
translate([2, 27, 0]) cube([1, 1, 0.5]);
translate([20, 27, 0]) cube([1, 1, 65.5]);
translate([21, 27, 0]) cube([1, 1, 47.5]);
translate([22, 27, 0]) cube([1, 1, 10]);
translate([23, 27, 0]) cube([1, 1, 26]);
translate([24, 27, 0]) cube([1, 1, 118.5]);
translate([25, 27, 0]) cube([1, 1, 5.5]);
translate([26, 27, 0]) cube([1, 1, 11]);
translate([27, 27, 0]) cube([1, 1, 3]);
translate([3, 27, 0]) cube([1, 1, 23.5]);
translate([6, 27, 0]) cube([1, 1, 18]);
translate([7, 27, 0]) cube([1, 1, 47.5]);
translate([9, 27, 0]) cube([1, 1, 8]);
translate([0, 28, 0]) cube([1, 1, 21]);
translate([10, 28, 0]) cube([1, 1, 27]);
translate([11, 28, 0]) cube([1, 1, 1.5]);
translate([12, 28, 0]) cube([1, 1, 4]);
translate([13, 28, 0]) cube([1, 1, 20]);
translate([14, 28, 0]) cube([1, 1, 35]);
translate([15, 28, 0]) cube([1, 1, 2]);
translate([16, 28, 0]) cube([1, 1, 12]);
translate([17, 28, 0]) cube([1, 1, 32.5]);
translate([18, 28, 0]) cube([1, 1, 4]);
translate([19, 28, 0]) cube([1, 1, 6]);
translate([2, 28, 0]) cube([1, 1, 0.5]);
translate([20, 28, 0]) cube([1, 1, 22]);
translate([21, 28, 0]) cube([1, 1, 38]);
translate([22, 28, 0]) cube([1, 1, 6.5]);
translate([23, 28, 0]) cube([1, 1, 16.5]);
translate([24, 28, 0]) cube([1, 1, 38.5]);
translate([25, 28, 0]) cube([1, 1, 11]);
translate([26, 28, 0]) cube([1, 1, 6]);
translate([27, 28, 0]) cube([1, 1, 21.5]);
translate([28, 28, 0]) cube([1, 1, 7.5]);
translate([3, 28, 0]) cube([1, 1, 13.5]);
translate([6, 28, 0]) cube([1, 1, 10]);
translate([7, 28, 0]) cube([1, 1, 41]);
translate([8, 28, 0]) cube([1, 1, 1]);
translate([9, 28, 0]) cube([1, 1, 3]);
translate([0, 29, 0]) cube([1, 1, 2.5]);
translate([10, 29, 0]) cube([1, 1, 9.5]);
translate([12, 29, 0]) cube([1, 1, 0.5]);
translate([13, 29, 0]) cube([1, 1, 5.5]);
translate([14, 29, 0]) cube([1, 1, 9]);
translate([15, 29, 0]) cube([1, 1, 2]);
translate([16, 29, 0]) cube([1, 1, 2]);
translate([17, 29, 0]) cube([1, 1, 6.5]);
translate([18, 29, 0]) cube([1, 1, 1]);
translate([19, 29, 0]) cube([1, 1, 3]);
translate([20, 29, 0]) cube([1, 1, 6]);
translate([21, 29, 0]) cube([1, 1, 9.5]);
translate([22, 29, 0]) cube([1, 1, 4]);
translate([23, 29, 0]) cube([1, 1, 7]);
translate([24, 29, 0]) cube([1, 1, 7.5]);
translate([25, 29, 0]) cube([1, 1, 2]);
translate([26, 29, 0]) cube([1, 1, 5.5]);
translate([27, 29, 0]) cube([1, 1, 9]);
translate([28, 29, 0]) cube([1, 1, 7]);
translate([29, 29, 0]) cube([1, 1, 0.5]);
translate([3, 29, 0]) cube([1, 1, 3.5]);
translate([6, 29, 0]) cube([1, 1, 2.5]);
translate([7, 29, 0]) cube([1, 1, 9.5]);
translate([9, 29, 0]) cube([1, 1, 1.5]);
translate([0, 3, 0]) cube([1, 1, 30]);
translate([2, 3, 0]) cube([1, 1, 1]);
translate([3, 3, 0]) cube([1, 1, 6.5]);
translate([0, 30, 0]) cube([1, 1, 10.5]);
translate([10, 30, 0]) cube([1, 1, 30]);
translate([11, 30, 0]) cube([1, 1, 0.5]);
translate([12, 30, 0]) cube([1, 1, 6]);
translate([13, 30, 0]) cube([1, 1, 22.5]);
translate([14, 30, 0]) cube([1, 1, 26.5]);
translate([15, 30, 0]) cube([1, 1, 3.5]);
translate([16, 30, 0]) cube([1, 1, 10]);
translate([17, 30, 0]) cube([1, 1, 27]);
translate([18, 30, 0]) cube([1, 1, 2]);
translate([19, 30, 0]) cube([1, 1, 4.5]);
translate([20, 30, 0]) cube([1, 1, 26]);
translate([21, 30, 0]) cube([1, 1, 15.5]);
translate([22, 30, 0]) cube([1, 1, 5]);
translate([23, 30, 0]) cube([1, 1, 20.5]);
translate([24, 30, 0]) cube([1, 1, 32.5]);
translate([25, 30, 0]) cube([1, 1, 1.5]);
translate([26, 30, 0]) cube([1, 1, 5.5]);
translate([27, 30, 0]) cube([1, 1, 47.5]);
translate([28, 30, 0]) cube([1, 1, 21.5]);
translate([29, 30, 0]) cube([1, 1, 3.5]);
translate([3, 30, 0]) cube([1, 1, 10.5]);
translate([30, 30, 0]) cube([1, 1, 1]);
translate([6, 30, 0]) cube([1, 1, 7.5]);
translate([7, 30, 0]) cube([1, 1, 24]);
translate([8, 30, 0]) cube([1, 1, 1]);
translate([9, 30, 0]) cube([1, 1, 5]);
translate([0, 31, 0]) cube([1, 1, 23]);
translate([10, 31, 0]) cube([1, 1, 38]);
translate([12, 31, 0]) cube([1, 1, 3]);
translate([13, 31, 0]) cube([1, 1, 32]);
translate([14, 31, 0]) cube([1, 1, 46]);
translate([15, 31, 0]) cube([1, 1, 5.5]);
translate([16, 31, 0]) cube([1, 1, 11.5]);
translate([17, 31, 0]) cube([1, 1, 52]);
translate([18, 31, 0]) cube([1, 1, 2.5]);
translate([19, 31, 0]) cube([1, 1, 8]);
translate([2, 31, 0]) cube([1, 1, 1.5]);
translate([20, 31, 0]) cube([1, 1, 23]);
translate([21, 31, 0]) cube([1, 1, 41]);
translate([22, 31, 0]) cube([1, 1, 4]);
translate([23, 31, 0]) cube([1, 1, 17.5]);
translate([24, 31, 0]) cube([1, 1, 45.5]);
translate([25, 31, 0]) cube([1, 1, 3]);
translate([26, 31, 0]) cube([1, 1, 10.5]);
translate([27, 31, 0]) cube([1, 1, 27.5]);
translate([28, 31, 0]) cube([1, 1, 45]);
translate([29, 31, 0]) cube([1, 1, 6]);
translate([3, 31, 0]) cube([1, 1, 20.5]);
translate([30, 31, 0]) cube([1, 1, 12]);
translate([31, 31, 0]) cube([1, 1, 3]);
translate([5, 31, 0]) cube([1, 1, 0.5]);
translate([6, 31, 0]) cube([1, 1, 12.5]);
translate([7, 31, 0]) cube([1, 1, 41]);
translate([8, 31, 0]) cube([1, 1, 1]);
translate([9, 31, 0]) cube([1, 1, 6.5]);
translate([0, 32, 0]) cube([1, 1, 5]);
translate([10, 32, 0]) cube([1, 1, 3]);
translate([12, 32, 0]) cube([1, 1, 0.5]);
translate([13, 32, 0]) cube([1, 1, 3.5]);
translate([14, 32, 0]) cube([1, 1, 4.5]);
translate([16, 32, 0]) cube([1, 1, 2]);
translate([17, 32, 0]) cube([1, 1, 2.5]);
translate([18, 32, 0]) cube([1, 1, 1.5]);
translate([19, 32, 0]) cube([1, 1, 0.5]);
translate([20, 32, 0]) cube([1, 1, 2.5]);
translate([21, 32, 0]) cube([1, 1, 3.5]);
translate([23, 32, 0]) cube([1, 1, 1.5]);
translate([24, 32, 0]) cube([1, 1, 1]);
translate([25, 32, 0]) cube([1, 1, 2]);
translate([26, 32, 0]) cube([1, 1, 0.5]);
translate([27, 32, 0]) cube([1, 1, 2]);
translate([28, 32, 0]) cube([1, 1, 3.5]);
translate([29, 32, 0]) cube([1, 1, 4]);
translate([3, 32, 0]) cube([1, 1, 2]);
translate([30, 32, 0]) cube([1, 1, 1.5]);
translate([31, 32, 0]) cube([1, 1, 4.5]);
translate([6, 32, 0]) cube([1, 1, 3.5]);
translate([7, 32, 0]) cube([1, 1, 2.5]);
translate([9, 32, 0]) cube([1, 1, 1]);
translate([0, 33, 0]) cube([1, 1, 4.5]);
translate([10, 33, 0]) cube([1, 1, 7.5]);
translate([12, 33, 0]) cube([1, 1, 2]);
translate([13, 33, 0]) cube([1, 1, 8.5]);
translate([14, 33, 0]) cube([1, 1, 16]);
translate([15, 33, 0]) cube([1, 1, 0.5]);
translate([16, 33, 0]) cube([1, 1, 4.5]);
translate([17, 33, 0]) cube([1, 1, 14]);
translate([18, 33, 0]) cube([1, 1, 3.5]);
translate([19, 33, 0]) cube([1, 1, 4.5]);
translate([20, 33, 0]) cube([1, 1, 5.5]);
translate([21, 33, 0]) cube([1, 1, 7.5]);
translate([22, 33, 0]) cube([1, 1, 3.5]);
translate([23, 33, 0]) cube([1, 1, 1.5]);
translate([24, 33, 0]) cube([1, 1, 8]);
translate([25, 33, 0]) cube([1, 1, 3.5]);
translate([26, 33, 0]) cube([1, 1, 2]);
translate([27, 33, 0]) cube([1, 1, 13.5]);
translate([28, 33, 0]) cube([1, 1, 5]);
translate([29, 33, 0]) cube([1, 1, 1]);
translate([3, 33, 0]) cube([1, 1, 5.5]);
translate([30, 33, 0]) cube([1, 1, 13]);
translate([31, 33, 0]) cube([1, 1, 7]);
translate([32, 33, 0]) cube([1, 1, 1]);
translate([33, 33, 0]) cube([1, 1, 0.5]);
translate([6, 33, 0]) cube([1, 1, 6]);
translate([7, 33, 0]) cube([1, 1, 11]);
translate([8, 33, 0]) cube([1, 1, 0.5]);
translate([9, 33, 0]) cube([1, 1, 0.5]);
translate([0, 34, 0]) cube([1, 1, 23.5]);
translate([10, 34, 0]) cube([1, 1, 22.5]);
translate([11, 34, 0]) cube([1, 1, 2]);
translate([12, 34, 0]) cube([1, 1, 3]);
translate([13, 34, 0]) cube([1, 1, 22.5]);
translate([14, 34, 0]) cube([1, 1, 30.5]);
translate([15, 34, 0]) cube([1, 1, 3]);
translate([16, 34, 0]) cube([1, 1, 9.5]);
translate([17, 34, 0]) cube([1, 1, 33.5]);
translate([18, 34, 0]) cube([1, 1, 2]);
translate([19, 34, 0]) cube([1, 1, 4.5]);
translate([2, 34, 0]) cube([1, 1, 0.5]);
translate([20, 34, 0]) cube([1, 1, 26.5]);
translate([21, 34, 0]) cube([1, 1, 21.5]);
translate([22, 34, 0]) cube([1, 1, 1.5]);
translate([23, 34, 0]) cube([1, 1, 9]);
translate([24, 34, 0]) cube([1, 1, 31.5]);
translate([25, 34, 0]) cube([1, 1, 2]);
translate([26, 34, 0]) cube([1, 1, 5]);
translate([27, 34, 0]) cube([1, 1, 26.5]);
translate([28, 34, 0]) cube([1, 1, 21]);
translate([29, 34, 0]) cube([1, 1, 4]);
translate([3, 34, 0]) cube([1, 1, 16]);
translate([30, 34, 0]) cube([1, 1, 6]);
translate([31, 34, 0]) cube([1, 1, 40.5]);
translate([32, 34, 0]) cube([1, 1, 1.5]);
translate([33, 34, 0]) cube([1, 1, 7]);
translate([34, 34, 0]) cube([1, 1, 1]);
translate([5, 34, 0]) cube([1, 1, 0.5]);
translate([6, 34, 0]) cube([1, 1, 5]);
translate([7, 34, 0]) cube([1, 1, 33]);
translate([8, 34, 0]) cube([1, 1, 0.5]);
translate([9, 34, 0]) cube([1, 1, 3.5]);
translate([0, 35, 0]) cube([1, 1, 12]);
translate([10, 35, 0]) cube([1, 1, 11.5]);
translate([11, 35, 0]) cube([1, 1, 1]);
translate([12, 35, 0]) cube([1, 1, 2]);
translate([13, 35, 0]) cube([1, 1, 11]);
translate([14, 35, 0]) cube([1, 1, 27.5]);
translate([15, 35, 0]) cube([1, 1, 2.5]);
translate([16, 35, 0]) cube([1, 1, 6]);
translate([17, 35, 0]) cube([1, 1, 23]);
translate([18, 35, 0]) cube([1, 1, 1]);
translate([19, 35, 0]) cube([1, 1, 2.5]);
translate([2, 35, 0]) cube([1, 1, 0.5]);
translate([20, 35, 0]) cube([1, 1, 10]);
translate([21, 35, 0]) cube([1, 1, 19]);
translate([22, 35, 0]) cube([1, 1, 2]);
translate([23, 35, 0]) cube([1, 1, 7]);
translate([24, 35, 0]) cube([1, 1, 13]);
translate([25, 35, 0]) cube([1, 1, 1.5]);
translate([26, 35, 0]) cube([1, 1, 2.5]);
translate([27, 35, 0]) cube([1, 1, 9.5]);
translate([28, 35, 0]) cube([1, 1, 11.5]);
translate([29, 35, 0]) cube([1, 1, 1]);
translate([3, 35, 0]) cube([1, 1, 9.5]);
translate([30, 35, 0]) cube([1, 1, 5.5]);
translate([31, 35, 0]) cube([1, 1, 10.5]);
translate([32, 35, 0]) cube([1, 1, 5.5]);
translate([33, 35, 0]) cube([1, 1, 3]);
translate([34, 35, 0]) cube([1, 1, 5]);
translate([35, 35, 0]) cube([1, 1, 2.5]);
translate([6, 35, 0]) cube([1, 1, 3.5]);
translate([7, 35, 0]) cube([1, 1, 24.5]);
translate([8, 35, 0]) cube([1, 1, 1.5]);
translate([9, 35, 0]) cube([1, 1, 5]);
translate([0, 36, 0]) cube([1, 1, 3.5]);
translate([10, 36, 0]) cube([1, 1, 5]);
translate([13, 36, 0]) cube([1, 1, 2]);
translate([14, 36, 0]) cube([1, 1, 6]);
translate([15, 36, 0]) cube([1, 1, 0.5]);
translate([16, 36, 0]) cube([1, 1, 0.5]);
translate([17, 36, 0]) cube([1, 1, 2.5]);
translate([18, 36, 0]) cube([1, 1, 0.5]);
translate([19, 36, 0]) cube([1, 1, 1]);
translate([20, 36, 0]) cube([1, 1, 5.5]);
translate([21, 36, 0]) cube([1, 1, 2.5]);
translate([22, 36, 0]) cube([1, 1, 5.5]);
translate([24, 36, 0]) cube([1, 1, 1.5]);
translate([25, 36, 0]) cube([1, 1, 1]);
translate([26, 36, 0]) cube([1, 1, 1]);
translate([27, 36, 0]) cube([1, 1, 1.5]);
translate([28, 36, 0]) cube([1, 1, 6]);
translate([3, 36, 0]) cube([1, 1, 0.5]);
translate([30, 36, 0]) cube([1, 1, 4]);
translate([31, 36, 0]) cube([1, 1, 2]);
translate([32, 36, 0]) cube([1, 1, 0.5]);
translate([33, 36, 0]) cube([1, 1, 3.5]);
translate([34, 36, 0]) cube([1, 1, 1.5]);
translate([35, 36, 0]) cube([1, 1, 2.5]);
translate([6, 36, 0]) cube([1, 1, 2]);
translate([7, 36, 0]) cube([1, 1, 4.5]);
translate([9, 36, 0]) cube([1, 1, 0.5]);
translate([0, 37, 0]) cube([1, 1, 8.5]);
translate([10, 37, 0]) cube([1, 1, 12.5]);
translate([12, 37, 0]) cube([1, 1, 1]);
translate([13, 37, 0]) cube([1, 1, 11]);
translate([14, 37, 0]) cube([1, 1, 17.5]);
translate([15, 37, 0]) cube([1, 1, 2]);
translate([16, 37, 0]) cube([1, 1, 5.5]);
translate([17, 37, 0]) cube([1, 1, 7.5]);
translate([18, 37, 0]) cube([1, 1, 1]);
translate([19, 37, 0]) cube([1, 1, 2]);
translate([2, 37, 0]) cube([1, 1, 0.5]);
translate([20, 37, 0]) cube([1, 1, 13]);
translate([21, 37, 0]) cube([1, 1, 14.5]);
translate([22, 37, 0]) cube([1, 1, 2.5]);
translate([23, 37, 0]) cube([1, 1, 2.5]);
translate([24, 37, 0]) cube([1, 1, 8]);
translate([25, 37, 0]) cube([1, 1, 1]);
translate([26, 37, 0]) cube([1, 1, 3]);
translate([27, 37, 0]) cube([1, 1, 7.5]);
translate([28, 37, 0]) cube([1, 1, 4]);
translate([29, 37, 0]) cube([1, 1, 2]);
translate([3, 37, 0]) cube([1, 1, 6.5]);
translate([30, 37, 0]) cube([1, 1, 4]);
translate([31, 37, 0]) cube([1, 1, 15]);
translate([32, 37, 0]) cube([1, 1, 1]);
translate([33, 37, 0]) cube([1, 1, 2]);
translate([34, 37, 0]) cube([1, 1, 18.5]);
translate([35, 37, 0]) cube([1, 1, 5.5]);
translate([36, 37, 0]) cube([1, 1, 1.5]);
translate([37, 37, 0]) cube([1, 1, 0.5]);
translate([5, 37, 0]) cube([1, 1, 0.5]);
translate([6, 37, 0]) cube([1, 1, 5]);
translate([7, 37, 0]) cube([1, 1, 15.5]);
translate([8, 37, 0]) cube([1, 1, 1.5]);
translate([9, 37, 0]) cube([1, 1, 1.5]);
translate([0, 38, 0]) cube([1, 1, 11.5]);
translate([10, 38, 0]) cube([1, 1, 27]);
translate([11, 38, 0]) cube([1, 1, 0.5]);
translate([12, 38, 0]) cube([1, 1, 0.5]);
translate([13, 38, 0]) cube([1, 1, 10.5]);
translate([14, 38, 0]) cube([1, 1, 28.5]);
translate([15, 38, 0]) cube([1, 1, 3]);
translate([16, 38, 0]) cube([1, 1, 3.5]);
translate([17, 38, 0]) cube([1, 1, 22.5]);
translate([19, 38, 0]) cube([1, 1, 2.5]);
translate([20, 38, 0]) cube([1, 1, 17]);
translate([21, 38, 0]) cube([1, 1, 19.5]);
translate([22, 38, 0]) cube([1, 1, 1.5]);
translate([23, 38, 0]) cube([1, 1, 6.5]);
translate([24, 38, 0]) cube([1, 1, 24.5]);
translate([25, 38, 0]) cube([1, 1, 1.5]);
translate([26, 38, 0]) cube([1, 1, 1.5]);
translate([27, 38, 0]) cube([1, 1, 7.5]);
translate([28, 38, 0]) cube([1, 1, 16.5]);
translate([29, 38, 0]) cube([1, 1, 1]);
translate([3, 38, 0]) cube([1, 1, 10.5]);
translate([30, 38, 0]) cube([1, 1, 4]);
translate([31, 38, 0]) cube([1, 1, 19]);
translate([32, 38, 0]) cube([1, 1, 1.5]);
translate([33, 38, 0]) cube([1, 1, 3]);
translate([34, 38, 0]) cube([1, 1, 5.5]);
translate([35, 38, 0]) cube([1, 1, 12.5]);
translate([36, 38, 0]) cube([1, 1, 3]);
translate([37, 38, 0]) cube([1, 1, 1.5]);
translate([38, 38, 0]) cube([1, 1, 0.5]);
translate([5, 38, 0]) cube([1, 1, 0.5]);
translate([6, 38, 0]) cube([1, 1, 6]);
translate([7, 38, 0]) cube([1, 1, 23]);
translate([8, 38, 0]) cube([1, 1, 1]);
translate([9, 38, 0]) cube([1, 1, 4.5]);
translate([0, 39, 0]) cube([1, 1, 2.5]);
translate([10, 39, 0]) cube([1, 1, 2.5]);
translate([13, 39, 0]) cube([1, 1, 0.5]);
translate([14, 39, 0]) cube([1, 1, 1.5]);
translate([17, 39, 0]) cube([1, 1, 2]);
translate([20, 39, 0]) cube([1, 1, 0.5]);
translate([21, 39, 0]) cube([1, 1, 0.5]);
translate([23, 39, 0]) cube([1, 1, 0.5]);
translate([24, 39, 0]) cube([1, 1, 0.5]);
translate([26, 39, 0]) cube([1, 1, 1.5]);
translate([27, 39, 0]) cube([1, 1, 0.5]);
translate([28, 39, 0]) cube([1, 1, 1]);
translate([29, 39, 0]) cube([1, 1, 0.5]);
translate([3, 39, 0]) cube([1, 1, 1]);
translate([30, 39, 0]) cube([1, 1, 0.5]);
translate([31, 39, 0]) cube([1, 1, 1.5]);
translate([32, 39, 0]) cube([1, 1, 2]);
translate([33, 39, 0]) cube([1, 1, 0.5]);
translate([34, 39, 0]) cube([1, 1, 0.5]);
translate([35, 39, 0]) cube([1, 1, 1.5]);
translate([36, 39, 0]) cube([1, 1, 1.5]);
translate([37, 39, 0]) cube([1, 1, 0.5]);
translate([38, 39, 0]) cube([1, 1, 2]);
translate([7, 39, 0]) cube([1, 1, 1.5]);
translate([0, 40, 0]) cube([1, 1, 2.5]);
translate([10, 40, 0]) cube([1, 1, 3.5]);
translate([11, 40, 0]) cube([1, 1, 0.5]);
translate([13, 40, 0]) cube([1, 1, 2.5]);
translate([14, 40, 0]) cube([1, 1, 9]);
translate([15, 40, 0]) cube([1, 1, 0.5]);
translate([16, 40, 0]) cube([1, 1, 2]);
translate([17, 40, 0]) cube([1, 1, 5]);
translate([18, 40, 0]) cube([1, 1, 0.5]);
translate([20, 40, 0]) cube([1, 1, 2.5]);
translate([21, 40, 0]) cube([1, 1, 4.5]);
translate([22, 40, 0]) cube([1, 1, 1]);
translate([23, 40, 0]) cube([1, 1, 1.5]);
translate([24, 40, 0]) cube([1, 1, 3.5]);
translate([25, 40, 0]) cube([1, 1, 0.5]);
translate([26, 40, 0]) cube([1, 1, 1]);
translate([27, 40, 0]) cube([1, 1, 0.5]);
translate([28, 40, 0]) cube([1, 1, 1.5]);
translate([29, 40, 0]) cube([1, 1, 1]);
translate([3, 40, 0]) cube([1, 1, 2.5]);
translate([30, 40, 0]) cube([1, 1, 0.5]);
translate([32, 40, 0]) cube([1, 1, 2]);
translate([33, 40, 0]) cube([1, 1, 2]);
translate([34, 40, 0]) cube([1, 1, 4.5]);
translate([35, 40, 0]) cube([1, 1, 0.5]);
translate([37, 40, 0]) cube([1, 1, 1]);
translate([38, 40, 0]) cube([1, 1, 1]);
translate([39, 40, 0]) cube([1, 1, 1]);
translate([6, 40, 0]) cube([1, 1, 1.5]);
translate([7, 40, 0]) cube([1, 1, 10.5]);
translate([8, 40, 0]) cube([1, 1, 0.5]);
translate([9, 40, 0]) cube([1, 1, 1]);
translate([0, 41, 0]) cube([1, 1, 10]);
translate([10, 41, 0]) cube([1, 1, 18.5]);
translate([13, 41, 0]) cube([1, 1, 7]);
translate([14, 41, 0]) cube([1, 1, 17.5]);
translate([15, 41, 0]) cube([1, 1, 0.5]);
translate([16, 41, 0]) cube([1, 1, 4.5]);
translate([17, 41, 0]) cube([1, 1, 11.5]);
translate([19, 41, 0]) cube([1, 1, 2]);
translate([20, 41, 0]) cube([1, 1, 7]);
translate([21, 41, 0]) cube([1, 1, 13.5]);
translate([22, 41, 0]) cube([1, 1, 1.5]);
translate([23, 41, 0]) cube([1, 1, 3.5]);
translate([24, 41, 0]) cube([1, 1, 9.5]);
translate([25, 41, 0]) cube([1, 1, 1.5]);
translate([26, 41, 0]) cube([1, 1, 0.5]);
translate([27, 41, 0]) cube([1, 1, 6]);
translate([28, 41, 0]) cube([1, 1, 6.5]);
translate([29, 41, 0]) cube([1, 1, 1]);
translate([3, 41, 0]) cube([1, 1, 5.5]);
translate([30, 41, 0]) cube([1, 1, 0.5]);
translate([31, 41, 0]) cube([1, 1, 6]);
translate([32, 41, 0]) cube([1, 1, 1]);
translate([33, 41, 0]) cube([1, 1, 2.5]);
translate([34, 41, 0]) cube([1, 1, 3]);
translate([35, 41, 0]) cube([1, 1, 4]);
translate([36, 41, 0]) cube([1, 1, 1]);
translate([37, 41, 0]) cube([1, 1, 1.5]);
translate([38, 41, 0]) cube([1, 1, 11]);
translate([39, 41, 0]) cube([1, 1, 0.5]);
translate([6, 41, 0]) cube([1, 1, 3]);
translate([7, 41, 0]) cube([1, 1, 12.5]);
translate([9, 41, 0]) cube([1, 1, 3.5]);
translate([0, 42, 0]) cube([1, 1, 8]);
translate([10, 42, 0]) cube([1, 1, 9.5]);
translate([13, 42, 0]) cube([1, 1, 3.5]);
translate([14, 42, 0]) cube([1, 1, 14.5]);
translate([15, 42, 0]) cube([1, 1, 0.5]);
translate([16, 42, 0]) cube([1, 1, 0.5]);
translate([17, 42, 0]) cube([1, 1, 11.5]);
translate([18, 42, 0]) cube([1, 1, 0.5]);
translate([19, 42, 0]) cube([1, 1, 2.5]);
translate([20, 42, 0]) cube([1, 1, 9]);
translate([21, 42, 0]) cube([1, 1, 12.5]);
translate([22, 42, 0]) cube([1, 1, 0.5]);
translate([23, 42, 0]) cube([1, 1, 2.5]);
translate([24, 42, 0]) cube([1, 1, 6.5]);
translate([26, 42, 0]) cube([1, 1, 0.5]);
translate([27, 42, 0]) cube([1, 1, 4]);
translate([28, 42, 0]) cube([1, 1, 7.5]);
translate([29, 42, 0]) cube([1, 1, 1]);
translate([3, 42, 0]) cube([1, 1, 3]);
translate([30, 42, 0]) cube([1, 1, 1.5]);
translate([31, 42, 0]) cube([1, 1, 3.5]);
translate([32, 42, 0]) cube([1, 1, 1]);
translate([33, 42, 0]) cube([1, 1, 1]);
translate([34, 42, 0]) cube([1, 1, 3.5]);
translate([35, 42, 0]) cube([1, 1, 2.5]);
translate([36, 42, 0]) cube([1, 1, 1.5]);
translate([37, 42, 0]) cube([1, 1, 1.5]);
translate([38, 42, 0]) cube([1, 1, 1]);
translate([39, 42, 0]) cube([1, 1, 0.5]);
translate([40, 42, 0]) cube([1, 1, 0.5]);
translate([41, 42, 0]) cube([1, 1, 1]);
translate([6, 42, 0]) cube([1, 1, 3]);
translate([7, 42, 0]) cube([1, 1, 14.5]);
translate([0, 43, 0]) cube([1, 1, 3]);
translate([10, 43, 0]) cube([1, 1, 0.5]);
translate([11, 43, 0]) cube([1, 1, 0.5]);
translate([12, 43, 0]) cube([1, 1, 0.5]);
translate([13, 43, 0]) cube([1, 1, 2]);
translate([14, 43, 0]) cube([1, 1, 4]);
translate([16, 43, 0]) cube([1, 1, 1]);
translate([17, 43, 0]) cube([1, 1, 2.5]);
translate([18, 43, 0]) cube([1, 1, 0.5]);
translate([19, 43, 0]) cube([1, 1, 0.5]);
translate([20, 43, 0]) cube([1, 1, 0.5]);
translate([21, 43, 0]) cube([1, 1, 1.5]);
translate([22, 43, 0]) cube([1, 1, 0.5]);
translate([23, 43, 0]) cube([1, 1, 1.5]);
translate([24, 43, 0]) cube([1, 1, 3.5]);
translate([27, 43, 0]) cube([1, 1, 0.5]);
translate([28, 43, 0]) cube([1, 1, 1.5]);
translate([3, 43, 0]) cube([1, 1, 1]);
translate([32, 43, 0]) cube([1, 1, 0.5]);
translate([34, 43, 0]) cube([1, 1, 0.5]);
translate([35, 43, 0]) cube([1, 1, 1.5]);
translate([37, 43, 0]) cube([1, 1, 2]);
translate([38, 43, 0]) cube([1, 1, 0.5]);
translate([39, 43, 0]) cube([1, 1, 0.5]);
translate([40, 43, 0]) cube([1, 1, 0.5]);
translate([43, 43, 0]) cube([1, 1, 0.5]);
translate([6, 43, 0]) cube([1, 1, 1]);
translate([7, 43, 0]) cube([1, 1, 2]);
translate([8, 43, 0]) cube([1, 1, 0.5]);
translate([0, 44, 0]) cube([1, 1, 4]);
translate([10, 44, 0]) cube([1, 1, 4.5]);
translate([11, 44, 0]) cube([1, 1, 0.5]);
translate([13, 44, 0]) cube([1, 1, 3]);
translate([14, 44, 0]) cube([1, 1, 4]);
translate([15, 44, 0]) cube([1, 1, 0.5]);
translate([16, 44, 0]) cube([1, 1, 1]);
translate([17, 44, 0]) cube([1, 1, 4.5]);
translate([19, 44, 0]) cube([1, 1, 0.5]);
translate([20, 44, 0]) cube([1, 1, 2.5]);
translate([21, 44, 0]) cube([1, 1, 4.5]);
translate([22, 44, 0]) cube([1, 1, 0.5]);
translate([23, 44, 0]) cube([1, 1, 2]);
translate([24, 44, 0]) cube([1, 1, 3.5]);
translate([26, 44, 0]) cube([1, 1, 1]);
translate([27, 44, 0]) cube([1, 1, 2.5]);
translate([28, 44, 0]) cube([1, 1, 1.5]);
translate([3, 44, 0]) cube([1, 1, 0.5]);
translate([30, 44, 0]) cube([1, 1, 1]);
translate([31, 44, 0]) cube([1, 1, 1]);
translate([33, 44, 0]) cube([1, 1, 0.5]);
translate([34, 44, 0]) cube([1, 1, 2]);
translate([37, 44, 0]) cube([1, 1, 0.5]);
translate([38, 44, 0]) cube([1, 1, 3.5]);
translate([40, 44, 0]) cube([1, 1, 0.5]);
translate([41, 44, 0]) cube([1, 1, 2]);
translate([42, 44, 0]) cube([1, 1, 1]);
translate([6, 44, 0]) cube([1, 1, 4]);
translate([7, 44, 0]) cube([1, 1, 10]);
translate([9, 44, 0]) cube([1, 1, 1]);
translate([0, 45, 0]) cube([1, 1, 5.5]);
translate([10, 45, 0]) cube([1, 1, 10]);
translate([12, 45, 0]) cube([1, 1, 1]);
translate([13, 45, 0]) cube([1, 1, 2.5]);
translate([14, 45, 0]) cube([1, 1, 10.5]);
translate([15, 45, 0]) cube([1, 1, 0.5]);
translate([16, 45, 0]) cube([1, 1, 1.5]);
translate([17, 45, 0]) cube([1, 1, 12.5]);
translate([19, 45, 0]) cube([1, 1, 1]);
translate([2, 45, 0]) cube([1, 1, 0.5]);
translate([20, 45, 0]) cube([1, 1, 2]);
translate([21, 45, 0]) cube([1, 1, 13]);
translate([22, 45, 0]) cube([1, 1, 0.5]);
translate([23, 45, 0]) cube([1, 1, 0.5]);
translate([24, 45, 0]) cube([1, 1, 7.5]);
translate([25, 45, 0]) cube([1, 1, 0.5]);
translate([26, 45, 0]) cube([1, 1, 1]);
translate([27, 45, 0]) cube([1, 1, 3]);
translate([28, 45, 0]) cube([1, 1, 9]);
translate([29, 45, 0]) cube([1, 1, 1.5]);
translate([3, 45, 0]) cube([1, 1, 6]);
translate([30, 45, 0]) cube([1, 1, 1]);
translate([31, 45, 0]) cube([1, 1, 4.5]);
translate([32, 45, 0]) cube([1, 1, 0.5]);
translate([33, 45, 0]) cube([1, 1, 1]);
translate([34, 45, 0]) cube([1, 1, 2]);
translate([35, 45, 0]) cube([1, 1, 4]);
translate([37, 45, 0]) cube([1, 1, 1]);
translate([38, 45, 0]) cube([1, 1, 2.5]);
translate([39, 45, 0]) cube([1, 1, 0.5]);
translate([41, 45, 0]) cube([1, 1, 1.5]);
translate([42, 45, 0]) cube([1, 1, 2]);
translate([44, 45, 0]) cube([1, 1, 0.5]);
translate([6, 45, 0]) cube([1, 1, 2.5]);
translate([7, 45, 0]) cube([1, 1, 12.5]);
translate([10, 46, 0]) cube([1, 1, 1]);
translate([13, 46, 0]) cube([1, 1, 0.5]);
translate([14, 46, 0]) cube([1, 1, 0.5]);
translate([16, 46, 0]) cube([1, 1, 0.5]);
translate([18, 46, 0]) cube([1, 1, 0.5]);
translate([21, 46, 0]) cube([1, 1, 1]);
translate([23, 46, 0]) cube([1, 1, 0.5]);
translate([25, 46, 0]) cube([1, 1, 0.5]);
translate([27, 46, 0]) cube([1, 1, 0.5]);
translate([28, 46, 0]) cube([1, 1, 0.5]);
translate([3, 46, 0]) cube([1, 1, 0.5]);
translate([31, 46, 0]) cube([1, 1, 0.5]);
translate([34, 46, 0]) cube([1, 1, 0.5]);
translate([36, 46, 0]) cube([1, 1, 0.5]);
translate([38, 46, 0]) cube([1, 1, 0.5]);
translate([45, 46, 0]) cube([1, 1, 0.5]);
translate([6, 46, 0]) cube([1, 1, 0.5]);
translate([9, 46, 0]) cube([1, 1, 0.5]);
translate([0, 47, 0]) cube([1, 1, 2]);
translate([10, 47, 0]) cube([1, 1, 3]);
translate([13, 47, 0]) cube([1, 1, 1.5]);
translate([14, 47, 0]) cube([1, 1, 2]);
translate([16, 47, 0]) cube([1, 1, 1]);
translate([17, 47, 0]) cube([1, 1, 3.5]);
translate([21, 47, 0]) cube([1, 1, 1]);
translate([23, 47, 0]) cube([1, 1, 0.5]);
translate([24, 47, 0]) cube([1, 1, 1]);
translate([25, 47, 0]) cube([1, 1, 1]);
translate([27, 47, 0]) cube([1, 1, 2]);
translate([28, 47, 0]) cube([1, 1, 0.5]);
translate([3, 47, 0]) cube([1, 1, 1]);
translate([30, 47, 0]) cube([1, 1, 0.5]);
translate([31, 47, 0]) cube([1, 1, 0.5]);
translate([34, 47, 0]) cube([1, 1, 1]);
translate([36, 47, 0]) cube([1, 1, 0.5]);
translate([41, 47, 0]) cube([1, 1, 1]);
translate([42, 47, 0]) cube([1, 1, 1]);
translate([6, 47, 0]) cube([1, 1, 0.5]);
translate([7, 47, 0]) cube([1, 1, 3]);
translate([9, 47, 0]) cube([1, 1, 0.5]);
translate([0, 48, 0]) cube([1, 1, 3.5]);
translate([10, 48, 0]) cube([1, 1, 4]);
translate([13, 48, 0]) cube([1, 1, 1.5]);
translate([14, 48, 0]) cube([1, 1, 4]);
translate([16, 48, 0]) cube([1, 1, 1.5]);
translate([17, 48, 0]) cube([1, 1, 6]);
translate([19, 48, 0]) cube([1, 1, 1.5]);
translate([20, 48, 0]) cube([1, 1, 3]);
translate([21, 48, 0]) cube([1, 1, 8]);
translate([22, 48, 0]) cube([1, 1, 2]);
translate([23, 48, 0]) cube([1, 1, 2]);
translate([24, 48, 0]) cube([1, 1, 1.5]);
translate([25, 48, 0]) cube([1, 1, 1]);
translate([26, 48, 0]) cube([1, 1, 1]);
translate([27, 48, 0]) cube([1, 1, 1.5]);
translate([28, 48, 0]) cube([1, 1, 1.5]);
translate([29, 48, 0]) cube([1, 1, 0.5]);
translate([3, 48, 0]) cube([1, 1, 2.5]);
translate([30, 48, 0]) cube([1, 1, 1]);
translate([31, 48, 0]) cube([1, 1, 0.5]);
translate([32, 48, 0]) cube([1, 1, 1]);
translate([33, 48, 0]) cube([1, 1, 0.5]);
translate([34, 48, 0]) cube([1, 1, 0.5]);
translate([35, 48, 0]) cube([1, 1, 0.5]);
translate([37, 48, 0]) cube([1, 1, 0.5]);
translate([40, 48, 0]) cube([1, 1, 0.5]);
translate([41, 48, 0]) cube([1, 1, 1]);
translate([42, 48, 0]) cube([1, 1, 0.5]);
translate([45, 48, 0]) cube([1, 1, 0.5]);
translate([46, 48, 0]) cube([1, 1, 0.5]);
translate([47, 48, 0]) cube([1, 1, 0.5]);
translate([6, 48, 0]) cube([1, 1, 0.5]);
translate([7, 48, 0]) cube([1, 1, 5]);
translate([9, 48, 0]) cube([1, 1, 0.5]);
translate([0, 49, 0]) cube([1, 1, 3]);
translate([10, 49, 0]) cube([1, 1, 0.5]);
translate([11, 49, 0]) cube([1, 1, 0.5]);
translate([13, 49, 0]) cube([1, 1, 2]);
translate([14, 49, 0]) cube([1, 1, 4]);
translate([15, 49, 0]) cube([1, 1, 0.5]);
translate([16, 49, 0]) cube([1, 1, 0.5]);
translate([17, 49, 0]) cube([1, 1, 4]);
translate([19, 49, 0]) cube([1, 1, 0.5]);
translate([20, 49, 0]) cube([1, 1, 1]);
translate([21, 49, 0]) cube([1, 1, 6]);
translate([23, 49, 0]) cube([1, 1, 0.5]);
translate([24, 49, 0]) cube([1, 1, 1.5]);
translate([25, 49, 0]) cube([1, 1, 0.5]);
translate([26, 49, 0]) cube([1, 1, 1.5]);
translate([27, 49, 0]) cube([1, 1, 1.5]);
translate([28, 49, 0]) cube([1, 1, 1.5]);
translate([29, 49, 0]) cube([1, 1, 1]);
translate([3, 49, 0]) cube([1, 1, 1]);
translate([31, 49, 0]) cube([1, 1, 2.5]);
translate([33, 49, 0]) cube([1, 1, 0.5]);
translate([34, 49, 0]) cube([1, 1, 0.5]);
translate([35, 49, 0]) cube([1, 1, 1]);
translate([37, 49, 0]) cube([1, 1, 1]);
translate([38, 49, 0]) cube([1, 1, 1]);
translate([39, 49, 0]) cube([1, 1, 0.5]);
translate([40, 49, 0]) cube([1, 1, 0.5]);
translate([41, 49, 0]) cube([1, 1, 0.5]);
translate([6, 49, 0]) cube([1, 1, 1]);
translate([7, 49, 0]) cube([1, 1, 3]);
translate([9, 49, 0]) cube([1, 1, 0.5]);
translate([0, 5, 0]) cube([1, 1, 1.5]);
translate([3, 5, 0]) cube([1, 1, 0.5]);
translate([10, 50, 0]) cube([1, 1, 1]);
translate([14, 50, 0]) cube([1, 1, 1]);
translate([17, 50, 0]) cube([1, 1, 1.5]);
translate([19, 50, 0]) cube([1, 1, 0.5]);
translate([21, 50, 0]) cube([1, 1, 1.5]);
translate([24, 50, 0]) cube([1, 1, 0.5]);
translate([28, 50, 0]) cube([1, 1, 0.5]);
translate([34, 50, 0]) cube([1, 1, 1]);
translate([43, 50, 0]) cube([1, 1, 0.5]);
translate([7, 50, 0]) cube([1, 1, 0.5]);
translate([0, 51, 0]) cube([1, 1, 1.5]);
translate([10, 51, 0]) cube([1, 1, 1.5]);
translate([13, 51, 0]) cube([1, 1, 0.5]);
translate([14, 51, 0]) cube([1, 1, 3]);
translate([16, 51, 0]) cube([1, 1, 0.5]);
translate([17, 51, 0]) cube([1, 1, 1.5]);
translate([20, 51, 0]) cube([1, 1, 0.5]);
translate([21, 51, 0]) cube([1, 1, 1.5]);
translate([23, 51, 0]) cube([1, 1, 1.5]);
translate([24, 51, 0]) cube([1, 1, 1]);
translate([26, 51, 0]) cube([1, 1, 0.5]);
translate([27, 51, 0]) cube([1, 1, 1.5]);
translate([28, 51, 0]) cube([1, 1, 0.5]);
translate([29, 51, 0]) cube([1, 1, 1]);
translate([3, 51, 0]) cube([1, 1, 1]);
translate([31, 51, 0]) cube([1, 1, 0.5]);
translate([34, 51, 0]) cube([1, 1, 0.5]);
translate([35, 51, 0]) cube([1, 1, 0.5]);
translate([38, 51, 0]) cube([1, 1, 0.5]);
translate([42, 51, 0]) cube([1, 1, 0.5]);
translate([45, 51, 0]) cube([1, 1, 1.5]);
translate([48, 51, 0]) cube([1, 1, 1]);
translate([7, 51, 0]) cube([1, 1, 2.5]);
translate([0, 52, 0]) cube([1, 1, 1.5]);
translate([10, 52, 0]) cube([1, 1, 1.5]);
translate([13, 52, 0]) cube([1, 1, 0.5]);
translate([14, 52, 0]) cube([1, 1, 3.5]);
translate([17, 52, 0]) cube([1, 1, 1.5]);
translate([19, 52, 0]) cube([1, 1, 0.5]);
translate([20, 52, 0]) cube([1, 1, 1.5]);
translate([21, 52, 0]) cube([1, 1, 4.5]);
translate([24, 52, 0]) cube([1, 1, 1]);
translate([25, 52, 0]) cube([1, 1, 0.5]);
translate([27, 52, 0]) cube([1, 1, 0.5]);
translate([28, 52, 0]) cube([1, 1, 1]);
translate([3, 52, 0]) cube([1, 1, 0.5]);
translate([31, 52, 0]) cube([1, 1, 1.5]);
translate([33, 52, 0]) cube([1, 1, 0.5]);
translate([34, 52, 0]) cube([1, 1, 0.5]);
translate([35, 52, 0]) cube([1, 1, 1]);
translate([37, 52, 0]) cube([1, 1, 0.5]);
translate([38, 52, 0]) cube([1, 1, 0.5]);
translate([49, 52, 0]) cube([1, 1, 1]);
translate([6, 52, 0]) cube([1, 1, 0.5]);
translate([7, 52, 0]) cube([1, 1, 1]);
translate([9, 52, 0]) cube([1, 1, 1]);
translate([0, 53, 0]) cube([1, 1, 1]);
translate([10, 53, 0]) cube([1, 1, 0.5]);
translate([14, 53, 0]) cube([1, 1, 0.5]);
translate([20, 53, 0]) cube([1, 1, 0.5]);
translate([27, 53, 0]) cube([1, 1, 0.5]);
translate([32, 53, 0]) cube([1, 1, 0.5]);
translate([7, 53, 0]) cube([1, 1, 1]);
translate([0, 54, 0]) cube([1, 1, 0.5]);
translate([11, 54, 0]) cube([1, 1, 0.5]);
translate([13, 54, 0]) cube([1, 1, 1]);
translate([14, 54, 0]) cube([1, 1, 0.5]);
translate([19, 54, 0]) cube([1, 1, 0.5]);
translate([24, 54, 0]) cube([1, 1, 0.5]);
translate([31, 54, 0]) cube([1, 1, 0.5]);
translate([34, 54, 0]) cube([1, 1, 0.5]);
translate([44, 54, 0]) cube([1, 1, 0.5]);
translate([51, 54, 0]) cube([1, 1, 0.5]);
translate([7, 54, 0]) cube([1, 1, 0.5]);
translate([0, 55, 0]) cube([1, 1, 1]);
translate([10, 55, 0]) cube([1, 1, 0.5]);
translate([13, 55, 0]) cube([1, 1, 0.5]);
translate([14, 55, 0]) cube([1, 1, 3]);
translate([17, 55, 0]) cube([1, 1, 0.5]);
translate([20, 55, 0]) cube([1, 1, 1.5]);
translate([21, 55, 0]) cube([1, 1, 1.5]);
translate([23, 55, 0]) cube([1, 1, 1]);
translate([24, 55, 0]) cube([1, 1, 1.5]);
translate([27, 55, 0]) cube([1, 1, 0.5]);
translate([31, 55, 0]) cube([1, 1, 0.5]);
translate([40, 55, 0]) cube([1, 1, 0.5]);
translate([7, 55, 0]) cube([1, 1, 1.5]);
translate([0, 56, 0]) cube([1, 1, 2]);
translate([10, 56, 0]) cube([1, 1, 2]);
translate([14, 56, 0]) cube([1, 1, 2]);
translate([17, 56, 0]) cube([1, 1, 2.5]);
translate([19, 56, 0]) cube([1, 1, 0.5]);
translate([20, 56, 0]) cube([1, 1, 1.5]);
translate([21, 56, 0]) cube([1, 1, 1]);
translate([23, 56, 0]) cube([1, 1, 0.5]);
translate([26, 56, 0]) cube([1, 1, 0.5]);
translate([28, 56, 0]) cube([1, 1, 0.5]);
translate([3, 56, 0]) cube([1, 1, 1]);
translate([31, 56, 0]) cube([1, 1, 0.5]);
translate([35, 56, 0]) cube([1, 1, 0.5]);
translate([7, 56, 0]) cube([1, 1, 2]);
translate([0, 57, 0]) cube([1, 1, 1.5]);
translate([14, 57, 0]) cube([1, 1, 0.5]);
translate([21, 57, 0]) cube([1, 1, 0.5]);
translate([31, 57, 0]) cube([1, 1, 0.5]);
translate([33, 57, 0]) cube([1, 1, 0.5]);
translate([0, 58, 0]) cube([1, 1, 0.5]);
translate([14, 58, 0]) cube([1, 1, 0.5]);
translate([20, 58, 0]) cube([1, 1, 1]);
translate([24, 58, 0]) cube([1, 1, 0.5]);
translate([27, 58, 0]) cube([1, 1, 0.5]);
translate([37, 58, 0]) cube([1, 1, 0.5]);
translate([48, 58, 0]) cube([1, 1, 0.5]);
translate([0, 59, 0]) cube([1, 1, 2]);
translate([10, 59, 0]) cube([1, 1, 0.5]);
translate([13, 59, 0]) cube([1, 1, 0.5]);
translate([14, 59, 0]) cube([1, 1, 1.5]);
translate([16, 59, 0]) cube([1, 1, 0.5]);
translate([21, 59, 0]) cube([1, 1, 0.5]);
translate([24, 59, 0]) cube([1, 1, 0.5]);
translate([28, 59, 0]) cube([1, 1, 0.5]);
translate([7, 59, 0]) cube([1, 1, 0.5]);
translate([0, 6, 0]) cube([1, 1, 40]);
translate([2, 6, 0]) cube([1, 1, 1]);
translate([3, 6, 0]) cube([1, 1, 17.5]);
translate([6, 6, 0]) cube([1, 1, 8]);
translate([0, 60, 0]) cube([1, 1, 1]);
translate([14, 61, 0]) cube([1, 1, 0.5]);
translate([17, 61, 0]) cube([1, 1, 0.5]);
translate([20, 61, 0]) cube([1, 1, 0.5]);
translate([7, 61, 0]) cube([1, 1, 1]);
translate([0, 62, 0]) cube([1, 1, 0.5]);
translate([10, 62, 0]) cube([1, 1, 0.5]);
translate([14, 62, 0]) cube([1, 1, 1]);
translate([28, 62, 0]) cube([1, 1, 0.5]);
translate([3, 62, 0]) cube([1, 1, 0.5]);
translate([7, 62, 0]) cube([1, 1, 1.5]);
translate([21, 63, 0]) cube([1, 1, 0.5]);
translate([35, 63, 0]) cube([1, 1, 0.5]);
translate([40, 63, 0]) cube([1, 1, 0.5]);
translate([7, 63, 0]) cube([1, 1, 0.5]);
translate([0, 64, 0]) cube([1, 1, 0.5]);
translate([20, 65, 0]) cube([1, 1, 0.5]);
translate([24, 65, 0]) cube([1, 1, 0.5]);
translate([0, 66, 0]) cube([1, 1, 0.5]);
translate([14, 66, 0]) cube([1, 1, 0.5]);
translate([0, 7, 0]) cube([1, 1, 46.5]);
translate([2, 7, 0]) cube([1, 1, 1.5]);
translate([3, 7, 0]) cube([1, 1, 15]);
translate([5, 7, 0]) cube([1, 1, 0.5]);
translate([6, 7, 0]) cube([1, 1, 28]);
translate([7, 7, 0]) cube([1, 1, 15.5]);
translate([20, 70, 0]) cube([1, 1, 0.5]);
translate([27, 70, 0]) cube([1, 1, 0.5]);
translate([41, 72, 0]) cube([1, 1, 0.5]);
translate([0, 73, 0]) cube([1, 1, 0.5]);
translate([0, 8, 0]) cube([1, 1, 2.5]);
translate([3, 8, 0]) cube([1, 1, 0.5]);
translate([5, 8, 0]) cube([1, 1, 0.5]);
translate([6, 8, 0]) cube([1, 1, 0.5]);
translate([0, 9, 0]) cube([1, 1, 16]);
translate([2, 9, 0]) cube([1, 1, 0.5]);
translate([3, 9, 0]) cube([1, 1, 8.5]);
translate([5, 9, 0]) cube([1, 1, 1]);
translate([6, 9, 0]) cube([1, 1, 15.5]);
translate([7, 9, 0]) cube([1, 1, 20]);
}
